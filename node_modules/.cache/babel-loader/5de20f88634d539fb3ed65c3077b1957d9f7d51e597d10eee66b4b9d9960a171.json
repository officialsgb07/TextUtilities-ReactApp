{"ast":null,"code":"import\"./App.css\";import\"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";//import About from \"./Custom Components/About\";\nimport Navbar from\"./Custom Components/Navbar\";import TextForm from\"./Custom Components/TextForm\";import React,{useState}from\"react\";import Alert from\"./Custom Components/Alert\";//import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);// We want to create a alert as a <object data=\"\nconst showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark Mode has been enabled\",\"success\");document.title=\"Text Utils - Dark Mode\";/*setInterval(() => {\n        document.title = \"Text Utils is amazing\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install Text Utils now\";\n      }, 4000);\n      This piece of code is only plugged in here to demonstrate how tab name changes dynamically.*/}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light Mode has been enabled\",\"success\");document.title=\"Text Utils - Light Mode\";}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils.blog\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter Your Text To Analyze\",mode:mode,showAlert:showAlert})})]});}export default App;","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","className","heading"],"sources":["C:/Users/shubham.bagwe/Documents/Interview_Preparation_Shubham/React JS Notes/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n//import About from \"./Custom Components/About\";\nimport Navbar from \"./Custom Components/Navbar\";\nimport TextForm from \"./Custom Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Custom Components/Alert\";\n//import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null); // We want to create a alert as a <object data=\"\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Text Utils - Dark Mode\";\n\n      /*setInterval(() => {\n        document.title = \"Text Utils is amazing\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install Text Utils now\";\n      }, 4000);\n      This piece of code is only plugged in here to demonstrate how tab name changes dynamically.*/\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/*<Router>*/}\n        <Navbar title=\"TextUtils.blog\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n        <TextForm\n                  heading=\"Enter Your Text To Analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n          {/*<Routes>\n            <Route\n             exact path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter Your Text To Analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes>*/}\n        </div>\n      {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,wDAAwD,CAC/D;AACA,MAAO,CAAAA,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,QAAQ,KAAM,8BAA8B,CACnD,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,2BAA2B,CAC7C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAEzC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1C,KAAM,CAAAa,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CAClDM,QAAQ,CAACI,KAAK,CAAG,wBAAwB,CAEzC;AACN;AACA;AACA;AACA;AACA;AACA,mGACI,CAAC,IAAM,CACLb,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDM,QAAQ,CAACI,KAAK,CAAG,yBAAyB,CAC5C,CACF,CAAC,CAED,mBACEhB,KAAA,CAAAF,SAAA,EAAAmB,QAAA,eAEIrB,IAAA,CAACN,MAAM,EAAC0B,KAAK,CAAC,gBAAgB,CAACd,IAAI,CAAEA,IAAK,CAACS,UAAU,CAAEA,UAAW,CAAE,CAAC,cACrEf,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAC/BrB,IAAA,CAACL,QAAQ,EACC4B,OAAO,CAAC,4BAA4B,CACpCjB,IAAI,CAAEA,IAAK,CACXI,SAAS,CAAEA,SAAU,CACtB,CAAC,CAcL,CAAC,EAER,CAAC,CAEP,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}